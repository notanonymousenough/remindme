# pytest.ini

[pytest]
minversion = 6.0

# Дополнительные опции, которые будут применяться к каждому запуску pytest.
# -v: Вывод более подробной информации о тестах (видно, какой тест прошел/упал)
# -s: Разрешает выводить stdout и stderr во время выполнения тестов (полезно для print-отладки)
addopts = -v -s

# pytest-asyncio автоматически запускает тесты и фикстуры,
# которые объявлены через 'async def', в асинхронном event loop'е.
# Режим "auto" - самый универсальный для большинства современных проектов.
# Режим "strict" требует явной отметки @pytest.mark.asyncio везде,
# режим "legacy" - для старых тестов, где использовались корутины без async/await.
# "auto" должен сам подхватить async def тесты и фикстуры.
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function
# Указываем, где искать тестовые файлы (если не стандартная папка 'tests')
# testpaths = tests

# Шаблоны имен файлов с тестами (если не стандартные 'test_*.py' или '*_test.py')
# python_files = test_*.py *_test.py

# Можно зарегистрировать кастомные маркеры, если они есть (кроме встроенных типа asyncio)
# markers =
#     integration: mark tests as integration tests

# Настройки для warnings (иногда полезно, если библиотеки кидают много шума)
# filterwarnings =
#    ignore::DeprecationWarning
