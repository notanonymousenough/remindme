"""Initial

Revision ID: e06240f68a3b
Revises: 
Create Date: 2025-03-24 16:58:24.298200

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e06240f68a3b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tags')
    op.drop_table('habit_progress')
    op.drop_table('reminder_tags')
    op.drop_table('users')
    op.drop_table('user_statistics')
    op.drop_table('achievement_templates')
    op.drop_table('reminders')
    op.drop_table('neuro_images')
    op.drop_table('habits')
    op.drop_table('user_achievements')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_achievements',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('template_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('unlocked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('unlocked_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('progress', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['achievement_templates.id'], name='user_achievements_template_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_achievements_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_achievements_pkey'),
    sa.UniqueConstraint('user_id', 'template_id', name='uq_user_achievement')
    )
    op.create_table('habits',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('period', postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', 'CUSTOM', name='habitperiod'), autoincrement=False, nullable=False),
    sa.Column('custom_period', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('progress', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('target', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_streak', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('best_streak', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('removed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='habits_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='habits_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('neuro_images',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('habit_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('reminder_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=512), autoincrement=False, nullable=False),
    sa.Column('thumbnail_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('prompt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('GOOD', 'NEUTRAL', 'BAD', name='imagestatus'), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['habit_id'], ['habits.id'], name='neuro_images_habit_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['reminder_id'], ['reminders.id'], name='neuro_images_reminder_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='neuro_images_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='neuro_images_pkey')
    )
    op.create_table('reminders',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'COMPLETED', 'FORGOTTEN', name='reminderstatus'), autoincrement=False, nullable=True),
    sa.Column('removed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('notification_sent', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='reminders_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='reminders_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('achievement_templates',
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('icon_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('condition', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('category', postgresql.ENUM('REMINDER', 'HABIT', 'SYSTEM', name='achievementcategory'), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='achievement_templates_pkey')
    )
    op.create_table('user_statistics',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('reminders_completed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reminders_forgotten', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_calculated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_statistics_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'id', name='user_statistics_pkey')
    )
    op.create_table('users',
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('sex', postgresql.ENUM('MALE', 'FEMALE', name='sextype'), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('birth_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('telegram_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('calendar_integration_key', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('experience', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('streak', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_active', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('telegram_id', name='users_telegram_id_key'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('reminder_tags',
    sa.Column('reminder_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['reminder_id'], ['reminders.id'], name='reminder_tags_reminder_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name='reminder_tags_tag_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('reminder_id', 'tag_id', name='reminder_tags_pkey')
    )
    op.create_table('habit_progress',
    sa.Column('habit_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['habit_id'], ['habits.id'], name='habit_progress_habit_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='habit_progress_pkey'),
    sa.UniqueConstraint('habit_id', 'date', name='uq_habit_date')
    )
    op.create_table('tags',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('color', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tags_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tags_pkey'),
    sa.UniqueConstraint('user_id', 'name', name='uq_user_tag_name')
    )
    # ### end Alembic commands ###
